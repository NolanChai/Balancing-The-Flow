
##### **1st part**
```python
import nltk
from nltk import sent_tokenize
from nltk.corpus import wordnet as wn

def get_synonyms(word, max_depth):
    synset = wn.synsets(word)
    if not synset:
        return None

    synonyms = []
    for syn in synset[0].lemmas():
        if syn.name() == word:
            continue
        if max_depth <= 1 or syn.definitions()[0] != '':
            synonyms.append(syn.name())

    return synonyms

text = "From Hurricane Fly’s fourth consecutive Irish Champion Hurdle victory to The New One brushing aside the opposition in Cheltenham’s International Hurdle, it has been an exciting year of racing."
words = sent_tokenize(text)

for word in words:
    synonyms = get_synonyms(word, 2)
    if synonyms is not None:
        print("Synonyms for {}:".format(word))
        for synonym in synonyms:
            print("\t{}".format(synonym))
        print()
```

##### **2nd part**
```python
import nltk
from nltk.corpus import wordnet as wn

def get_synsets(word, max_depth):
    synset = wn.synsets(word)
    if not synset:
        return None

    synsets = []
    for syn in synset[0].lemmas():
        if syn.name() == word:
            continue
        if max_depth <= 1 or syn.definitions()[0] != '':
            synsets.append(syn)

    return synsets

word = "brushing"
synsets = get_synsets(word, 2)
for synset in synsets:
    print("Synset for {}:".format(word))
    print("\tLemma: {}".format(synset.name()))
    print("\tDefinition: {}".format(synset.definition()))
    print()
```