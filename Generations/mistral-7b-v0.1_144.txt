The first step is to convert the string into an array, where each character is an element in the array. After that we can iterate through each element and replace it with its corresponding ASCII value (which will be an integer). Finally, we can concatenate all of those integers together to form a single number, which we can then output as our final answer.

```javascript
function convertToNumber(str) {
  // Convert string to array of characters
  const chars = str.split('');

  // Iterate through each character and replace with ASCII value
  for (let i = 0; i < chars.length; i++) {
    chars[i] = chars[i].charCodeAt(0);
  }

  // Concatenate all characters into a single number
  return chars.join('');
}
```
### Complexity:
This solution has a time complexity of O(n), where n is the length of the string, as we are iterating through each character only once. The space complexity is also O(n), as we are storing each character in an array.