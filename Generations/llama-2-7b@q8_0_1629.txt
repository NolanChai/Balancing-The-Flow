The original solution (the answer) has been changed for this question, because the author of this question doesn't want the answer to be given at the end of the file, but after each test case.

### Test Cases
#### Example 1
```python
import os,sys
sys.path.insert(0,'../../../')
from rpy2.robjects.packages import importr
R = importr('R')


def run():
    R("""
      # This is a test program from the book "R in Action" (3rd edition), Chapter 17, Section 6
      library(datasets)

      # Get the data.frame containing all of the values for each variable in our dataset
      data <- read.table("data/mtcars.dat", header=FALSE)
    """)
    
### Expected output:
###  1982 0.3462750827 0.0860646487
###  1983 0.3538629177 -0.0876238550
    
    R("""
      # Select the columns from our data frame containing all of the variables we want to use as inputs in our model.
      set <- data[c('mpg', 'cyl', 'disp', 'hp')]
    """)
    
### Expected output:
###   mpg cyl disp hp
###  1982 0.3462750827 0.0860646487 0.0000000000 0.0000000000
###  1983 0.3538629177 -0.0876238550 0.0000000000 0.0000000000
    
    R("""
      # Build an lm model and fit it to our data frame with the variables we want
      m = lm(mpg ~ cyl + disp + hp, set)
    """)
    
### Expected output: 
###   (Intercept)       cyl        disp         hp
###  1.496573026 -1.258841742  0.227514817  0.066750100
    
    R("""
      # Print the coefficients (the estimated coefficients of each variable from our lm model)
      print(summary(m))
    """)
    
### Expected output: 
###   Summary of n=28 observations for mpg: 
###   Minimum 1.496573026, Median 1.666666667, Mean 1.496573026, Maximum 4.258575473
###   (Intercept)     cyl       disp        hp
###   -0.510952536 -0.078524227  0.120930595  0.0499999998 
###   Standard Error    (Intercept)     cyl       disp        hp
###   -0.855631278 -0.093046476  0.137523842  0.059675193 
###   Degrees of Freedom (Intercept)     cyl       disp        hp
###   n=28           n=28           n=28           n=27         
###   p-value     0.800765885 0.149354836 0.290432297 0.0000000000 
    
    R("""
      # Print the residual plots of our lm model and visually inspect for outliers in the data
      plot(m)
      plot(summary(m))
    """)

### Expected output: 
###   Residuals:
###     Min. 1Q Median 3Q Max.
###      0 -0.2875 -0.0937  0.2466  0.5525
###     Mean   0.0246  0.0962  0.2154  0.4926
###     Median 0.0948  0.3535 -0.0235  0.7290
###      1 QR Range Deviation Max.
###      -0.4273 0.6653 0.4730  0.7548 
    
    R("""
      # Print the predictions of our lm model
      print(predict(m, data))
    """)
    
### Expected output: 
###   Min. 1Q Median 3Q Max.
###      0 -4.27385929 -1.06843951  1.20779593  3.21789330 
###     Mean -0.42733333 -1.02349982  0.60948816  2.95724041 
###     Median -1.93333333 -1.02349982 -0.42733333 -0.32029828 
###      1 QR Range Deviation Max.
###      -5.56666666 -1.04598796  2.18967596  4.55411326 
    
### Example 2:
```python
import os,sys
sys.path.insert(0,'../../../')
from rpy2.robjects.packages import importr
R = importr('R')

def run():
    R("""
      # This is a test program from the book "R in Action" (3rd edition), Chapter 17, Section 6
      library(datasets)
      
      # Get the data.frame containing all of the values for each variable in our dataset
      data <- read.table("data/mtcars.dat", header=FALSE)
    """)
    
### Expected output:
###   Min. 1Q Median 3Q Max.
###      0 -4.27385929 -1.06843951  1.20779593  3.21789330 
###     Mean -0.42733333 -1.02349982  0.60948816  2.95724041 
###     Median -1.93333333 -1.02349982 -0.42733333 -0.32029828 
###      1 QR Range Deviation Max.
###      -5.56666666 -1.04598796  2.18967596  4.55411326 
    
    R("""
      # Select the columns from our data frame containing all of the variables we want to use as inputs in our model.
      set <- data[c('mpg', 'cyl', 'disp', 'hp')]
      
      # Build an lm model and fit it to our data frame with the variables we want
      m = lm(mpg ~ cyl + disp + hp, set)
    """)
    
### Expected output: 
###   (Intercept)        cyl        disp         hp
###   -1.496573026 -1.258841742  0.227514817  0.066750100 
    
    R("""
      # Print the coefficients (the estimated coefficients of each variable from our lm model)
      print(summary(m))
      
