```java
public class Solution {
    public int[] nextPermutation(int[] nums) {
        if (nums == null || nums.length <= 1) return nums;
        int i = findMinIndex(nums);
        swap(i, nums.length - 1, nums);
        for (int j = i + 1; j < nums.length; j++) {
            if (nums[j] >= nums[j - 1]) break; // 遍历至当前索引
            swap(i, j, nums);
        }
        for (int j = i + 2; j < nums.length; j++) {
            if (nums[j - 1] > nums[j]) break; // 遍历至当前索引
            swap(i, j, nums);
        }
        return nums;
    }

    private int findMinIndex(int[] nums) {
        if (nums == null || nums.length <= 1) return -1;
        int i = 0;
        for (int j = 1; j < nums.length; j++) { // 下标从1开始,因为第一个元素不算
            if (nums[i] > nums[j]) break;
        }
        return i;
    }

    private void swap(int idx1, int idx2, int[] nums) {
        int temp = nums[idx1];
        nums[idx1] = nums[idx2];
        nums[idx2] = temp;
    }
}
```