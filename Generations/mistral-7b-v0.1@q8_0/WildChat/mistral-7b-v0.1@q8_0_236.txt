[TEST]
acer@LAPTOP-TA0QKCOO MINGW64 /c/rest_api1
$ npm test

> rest_api1@1.0.0 test C:\Users\acer\Desktop\rest_api1
> node_modules/mocha/bin/_mocha -R dot --compilers js:babel-register



  ✚ UserController Test Suite
    ✓ POST /users should create a new user with an id, name and address (97ms)


  2 passing (1s)

acer@LAPTOP-TA0QKCOO MINGW64 /c/rest_api1
$ [/TEST]

[GET]npm init -y
This utility will walk you through creating a package.json file.
It only covers the most common items, and tries to guess sensible defaults.

See `npm help json` for definitive documentation on these fields
and exactly what they do.

Use `npm install <pkg> --save` afterwards to install a package and
save it as a dependency in the package.json file.

Press ^C at any time to quit.
package name: (rest_api1)
version: (1.0.0)
description:
entry point: (index.js)
test command:
git repository:
keywords:
author: acer
license: (ISC)
About to write to C:\Users\acer\rest_api1\package.json:

{
  "name": "rest_api1",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "author": "acer",
  "license": "ISC"
}


Is this ok? (yes) y
npm i mongodb@4.2.0
+ mongodb@4.2.0
added 39 packages in 5.76s
[GET]npm init -y
This utility will walk you through creating a package.json file.
It only covers the most common items, and tries to guess sensible defaults.

See `npm help json` for definitive documentation on these fields
and exactly what they do.

Use `npm install <pkg> --save` afterwards to install a package and
save it as a dependency in the package.json file.

Press ^C at any time to quit.
package name: (rest_api1)
version: (1.0.0)
description:
entry point: (index.js)
test command:
git repository:
keywords:
author: acer
license: (ISC)
About to write to C:\Users\acer\rest_api1\package.json:

{
  "name": "rest_api1",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "author": "acer",
  "license": "ISC"
}


Is this ok? (yes) y
[GET]npm init -y
This utility will walk you through creating a package.json file.
It only covers the most common items, and tries to guess sensible defaults.

See `npm help json` for definitive documentation on these fields
and exactly what they do.

Use `npm install <pkg> --save` afterwards to install a package and
save it as a dependency in the package.json file.

Press ^C at any time to quit.
package name: (rest_api1)
version: (1.0.0)
description:
entry point: (index.js)
test command:
git repository:
keywords:
author: acer
license: (ISC)
About to write to C:\Users\acer\rest_api1\package.json:

{
  "name": "rest_api1",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "author": "acer",
  "license": "ISC"
}


Is this ok? (yes) y
[GET]npm init -y
This utility will walk you through creating a package.json file.
It only covers the most common items, and tries to guess sensible defaults.

See `npm help json` for definitive documentation on these fields
and exactly what they do.

Use `npm install <pkg> --save` afterwards to install a package and
save it as a dependency in the package.json file.

Press ^C at any time to quit.
package name: (rest_api1)
version: (1.0.0)
description:
entry point: (index.js)
test command:
git repository:
keywords:
author: acer
license: (ISC)
About to write to C:\Users\acer\rest_api1\package.json:

{
  "name": "rest_api1",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "author": "acer",
  "license": "ISC"
}


Is this ok? (yes) y
[GET]npm init -y
This utility will walk you through creating a package.json file.
It only covers the most common items, and tries to guess sensible defaults.

See `npm help json` for definitive documentation on these fields
and exactly what they do.

Use `npm install <pkg> --save` afterwards to install a package and
save it as a dependency in the package.json file.

Press ^C at any time to quit.
package name: (rest_api1)
version: (1.0.0)
description:
entry point: (index.js)
test command:
git repository:
keywords:
author: acer
license: (ISC)
About to write to C:\Users\acer\rest_api1\package.json:

{
  "name": "rest_api1",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "author": "acer",
  "license": "ISC"
}


Is this ok? (yes) y
[GET]npm init -y
This utility will walk you through creating a package.json file.
It only covers the most common items, and tries to guess sensible defaults.

See `npm help json` for definitive documentation on these fields
and exactly what they do.

Use `npm install <pkg> --save` afterwards to install a package and
save it as a dependency in the package.json file.

Press ^C at any time to quit.
package name: (rest_api1)
version: (1.0.0)
description:
entry point: (index.js)
test command:
git repository:
keywords:
author: acer
license: (ISC)
About to write to C:\Users\acer\rest_api1\package.json:

{
  "name": "rest_api1",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "author": "acer",
  "license": "ISC"
}


Is this ok? (yes) y
[GET]npm init -y
This utility will walk you through creating a package.json file.
It only covers the most common items, and tries to guess sensible defaults.

See `npm help json` for definitive documentation on these fields
and exactly what they do.

Use `npm install <pkg> --save` afterwards to install a package and
save it as a dependency in the package.json file.

Press ^C at any time to quit.
package name: (rest_api1)
version: (1.0.0)
description:
entry point: (index.js)
test command:
git repository:
keywords:
author: acer
license: (ISC)
About to write to C:\Users\acer\rest_api1\package.json:

{
  "name": "rest_api1",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "author": "acer",
  "license": "ISC"
}


Is this ok? (yes) y