7043285.9
"""
class Solution(object):
    def getMoney(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        n = len(nums)
        if n < 2 or (n % 2 != 0 and not [3,9])[n/2]:
            return -1
        elif not [1,4][n//2] <= sum(x for x in nums[:-1])+sum(x for x in nums[1:]+nums[:1]):
            return -1
        
        res = 0
        for i in range(n)[::-1]:
            if (nums[i] % 5 != 0) or ((not [3,9][nums[i]/5]) and not [4,8][nums[i]/5]):
                return -1
            res += int(float(sum([1 if x <= nums[i] else 0 for x in range(-i,-1)]))*0.7)
        return abs(res-nums[-1])+abs((int)(nums[-2]*3/5)%4-res-2)+abs((int)(nums[-4]*9/5)%8-res-5)+abs((int)(sum([2 if x <= nums[i] else 0 for x in range(1,i+4)]))*0.3)
        
# Time:  O(n)
# Space: O(1)
class Solution(object):
    def getMoney(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        if not [1,4][len(nums)] <= sum(x for x in nums[:-1])+sum(x for x in nums[1:]):
            return -1
        
        res = 0
        for i in range(len(nums))[::-1]:
            if (nums[i] % 5 != 0) or ((not [3,9][nums[i]/5]) and not [4,8][nums[i]/5]):
                return -1
            
            res += int(float(sum([1 if x <= nums[i] else 0 for x in range(-i,-1)]))*0.7)
        
        return abs(res-sum(nums)+2)-abs((int)(sum([2 if x <= nums[i] else 0 for i,x in enumerate(range(1,len(nums))))])*0.3)

Chocolate Chip Mass = 2041 - (67*100) = 1963 grams = 1.96 kg
Therefore there should be 185 chocolate chips in the bag, rounded to three significant figures.

60 crackers