<img src="https://i.imgur.com/W2Oz61L.png" alt="response"/>


```python
## Load the data
import pandas as pd
df = pd.read_csv("CNN_Story_Headlines.csv")
df.head()
```




<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>title</th>
      <th>headline</th>
      <th>label</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>Supreme Court gives same-sex marriage two major victories</td>
      <td>The Supreme Court gave proponents of same-sex marriage two major victories in...<br/></td>
      <td>Instruction</td>
    </tr>
    <tr>
      <th>1</th>
      <td>Supreme Court allows same-sex marriages to resume in California</td>
      <td>The Supreme Court has given proponents of same-sex marriage a major victory,...<br/></td>
      <td>Instruction</td>
    </tr>
    <tr>
      <th>2</th>
      <td>Supreme Court rejects Prop. 8 appeal</td>
      <td>The Supreme Court has rejected an appeal from proponents of California's ban...<br/></td>
      <td>Instruction</td>
    </tr>
    <tr>
      <th>3</th>
      <td>Supreme Court strikes down Defense of Marriage Act</td>
      <td>The Supreme Court struck down a key part of the federal law defining marriage...<br/></td>
      <td>Instruction</td>
    </tr>
    <tr>
      <th>4</th>
      <td>Supreme Court strikes down Defense of Marriage Act</td>
      <td>The Supreme Court struck down a key part of the federal law defining marriage...<br/></td>
      <td>Instruction</td>
    </tr>
  </tbody>
</table>
</div>




```python
## Define a function that preprocesses text
def preprocess(text):
    return text.lower().replace('-',' ').strip()

## Apply the function on column 'title' and 'headline'
df['title'] = df['title'].apply(preprocess)
df['headline'] = df['headline'].apply(preprocess)
```

    C:\Users\Jennifer\anaconda3\lib\site-packages\ipykernel_launcher.py:1: SettingWithCopyWarning:
    A value is trying to be set on a copy of a slice from a DataFrame.
    Try using .loc[row_indexer,col_indexer] = value instead

    See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
      """Entry point for launching an IPython kernel.



```python
## Convert the text into a bag of words (BoW) representation
from nltk.tokenize import word_tokenize
from sklearn.feature_extraction.text import CountVectorizer
cv = CountVectorizer()
df['title_bow'] = cv.fit_transform(df['title'])
```

    C:\Users\Jennifer\anaconda3\lib\site-packages\sklearn\feature_extraction\text.py:214: FutureWarning: Parameter text is deprecated and will be removed in 0.23, use doc instead.
      warnings.warn(msg)
    C:\Users\Jennifer\anaconda3\lib\site-packages\sklearn\feature_extraction\text.py:184: FutureWarning: Parameter ngram_range is deprecated and will be removed in 0.23, use ngram_range=(min_ngram, max_ngram) instead.
      warnings.warn("Parameter `ngram_range` is deprecated and will be "



```python
## Convert the text into a bag of words (BoW) representation
from nltk.tokenize import word_tokenize
from sklearn.feature_extraction.text import CountVectorizer
cv = CountVectorizer()
df['headline_bow'] = cv.fit_transform(df['headline'])
```

    C:\Users\Jennifer\anaconda3\lib\site-packages\sklearn\feature_extraction\text.py:214: FutureWarning: Parameter text is deprecated and will be removed in 0.23, use doc instead.
      warnings.warn(msg)
    C:\Users\Jennifer\anaconda3\lib\site-packages\sklearn\feature_extraction\text.py:184: FutureWarning: Parameter ngram_range is deprecated and will be removed in 0.23, use ngram_range=(min_ngram, max_ngram) instead.
      warnings.warn("Parameter `ngram_range` is deprecated and will be "



```python
## Plot the distributions of title and headline word count
df.hist(column=['title_bow', 'headline_bow'], figsize=(15,20))
```




<img src="output_7_0.png" alt="output_7_0"/>




```python
## Split the dataset into train and test sets
from sklearn.model_selection import train_test_split
df_train, df_test = train_test_split(df)
```


```python
## Define a function that preprocesses text
def preprocess(text):
    return text.lower().replace('-',' ').strip()

## Apply the function on column 'title' and 'headline'
df['title'] = df['title'].apply(preprocess)
df['headline'] = df['headline'].apply(preprocess)
```

    C:\Users\Jennifer\anaconda3\lib\site-packages\ipykernel_launcher.py:1: SettingWithCopyWarning:
    A value is trying to be set on a copy of a slice from a DataFrame.
    Try using .loc[row_indexer,col_indexer] = value instead

    See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
      """Entry point for launching an IPython kernel.



```python
## Convert the text into a bag of words (BoW) representation
from nltk.tokenize import word_tokenize
from sklearn.feature_extraction.text import CountVectorizer
cv = CountVectorizer()
df['title_bow'] = cv.fit_transform(df['title'])
```

    C:\Users\Jennifer\anaconda3\lib\site-packages\sklearn\feature_extraction\text.py:214: FutureWarning: Parameter text is deprecated and will be removed in 0.23, use doc instead.
      warnings.warn(msg)
    C:\Users\Jennifer\anaconda3\lib\site-packages\sklearn\feature_extraction\text.py:184: FutureWarning: Parameter ngram_range is deprecated and will be removed in 0.23, use ngram_range=(min_ngram, max_ngram) instead.
      warnings.warn("Parameter `ngram_range` is deprecated and will be "



```python
## Convert the text into a bag of words (BoW) representation
from nltk.tokenize import word_tokenize
from sklearn.feature_extraction.text import CountVectorizer
cv = CountVectorizer()
df['headline_bow'] = cv.fit_transform(df['headline'])
```

    C:\Users\Jennifer