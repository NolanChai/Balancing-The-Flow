```python
from datetime import datetime
import json
import pandas as pd
import requests
import time

def get_results(start_time):
    while True:
        response = requests.get('https://data-api.betfair.com/exchange/v10/events?type=INPLAY&eventType=soccer&sportId=2')
        print(datetime.now().strftime("%H:%M:%S"))
        if 'results' in response.text:
            return json.loads(response.text)['results']
        time.sleep(10)

def get_fixtures():
    fixtures = []
    response = requests.get('https://data-api.betfair.com/exchange/v10/events?type=PRELIVE&eventType=soccer&sportId=2')
    for event in json.loads(response.text)['results']:
        fixtures.append({'eventId': event['eventId'], 'time': datetime.fromtimestamp(int(event['startTime']))})
    return sorted(fixtures, key=lambda x:x['time'])

def get_market(eventId):
    response = requests.get('https://data-api.betfair.com/exchange/v10/events/' + str(eventId) + '/markets?type=CASH')
    return json.loads(response.text)['results'][0]

def get_odds(marketId):
    response = requests.get('https://data-api.betfair.com/exchange/v10/events/' + str(eventId) + '/markets/' + str(marketId) + '/prices?type=CASH')
    return json.loads(response.text)['results'][0]

def main():
    print("Loading Fixtures...")
    fixtures = get_fixtures()
    print("Getting Results...")
    results = get_results(datetime.now().strftime("%H:%M:%S"))
    print("Loading Fixture Odds...")
    odds = []
    for fixture in fixtures:
        market = get_market(fixture['eventId'])
        odds.append({'eventId': fixture['eventId'], 'marketId': market['id']})
        odds[len(odds)-1]['favouriteOdds'] = str(get_odds(market['id']).get('back'))
    print("Getting Results...")
    results = get_results(datetime.now().strftime("%H:%M:%S"))
    for fixture in fixtures:
        market = get_market(fixture['eventId'])
        odds[len(odds)-1]['homeTeam'] = market['back'].get('price') if market['back'].get('price') is not None else market['lay'].get('price')
        odds[len(odds)-1]['awayTeam'] = market['back'].get('price') if market['back'].get('price') is not None else market['lay'].get('price')
        if market['outcome'].get('homeWin').get('price') is not None:
            odds[len(odds)-1]['drawOdds'] = str(market['outcome'].get('homeWin').get('price'))
    print("Saving Data...")
    with open('data.json', 'w') as f:
        json.dump(odds, f)

if __name__ == "__main__":
    main()
```