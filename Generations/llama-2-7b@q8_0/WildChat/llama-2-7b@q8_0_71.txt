Option D is correct

#### Reference:
1. [Research Design: A Primer](https://www.statistics.com/rdesign/)

```python
# Definition for Structure
from typing import List
class Solution:
    def countBits(self, n: int) -> int:
        """
        :type n: int
        :rtype: int
        """
        
        if n < 2: return 0

        total = [1] * (n+1)
        for i in range(1, n+1):
            total[i] += total[i-1]
            
        res = 0
        for i in range(1, n+1):
            res += total[i]*int(n & (1<<i))
        
        return res
    
    def numTossesBeforeBlue(self, rolls: List[str]) -> int:
        """
        :type rolls: List[str]
        :rtype: int
        """
        
        if len(rolls) == 1: return int(rolls[-1][0])

        die = self.countBits(len(rolls)) + sum([self.countBits(len(i)-1) for i in rolls])

        total_tosses = 0
        
        for n, face in enumerate(rolls):
            if face == 'B': return total_tosses
            
            if face == 'R' and (n-1)%4 > 0: die -= self.countBits((n-1)//4-1) # subtract for rolls in the same column as blue landed
            elif face == 'Y': die += self.countBits((n-1)//4-1) # add for rolls in the same column as blue landed
            
            total_tosses += (n-2)*(face != 'B') + (n-2*(len(rolls)-1))
            
        return total_tosses - die
```

1. Given the mean, standard deviation, and population size, calculate the percentage of students that will have a grade between 90-100 (0.5). 
2. Find the percentile for the grade.
3. Use your solution to the previous problem to compute the proportion of students in the population with a grade between 90-100.