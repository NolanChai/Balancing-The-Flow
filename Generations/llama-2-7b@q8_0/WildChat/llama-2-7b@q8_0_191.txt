

#ifndef __GPIO_H__
#define __GPIO_H__

#include "hw_def.h"
//------------------------------------------------------------------------------
// DEFINES
//------------------------------------------------------------------------------
// GPIO number mapping from Linux
typedef enum {
    // GPIO 0-15
    PIN_A0=0,PIN_A1=1,PIN_A2=2,PIN_A3=3,PIN_A4=4,PIN_A5=5,PIN_A6=6,
    PIN_A7=7,PIN_A8=8,PIN_A9=9,PIN_A10=10,PIN_A11=11,PIN_A12=12,PIN_A13=13,
    PIN_A14=14,PIN_A15=15,

    // GPIO 16-27
    PIN_B0=16,PIN_B1=17,PIN_B2=18,PIN_B3=19,PIN_B4=20,PIN_B5=21,PIN_B6=22,
    PIN_B7=23,PIN_B8=24,PIN_B9=25,PIN_B10=26,PIN_B11=27,

    // GPIO 28-39
    PIN_C0=28,PIN_C1=29,PIN_C2=30,PIN_C3=31,PIN_C4=32,PIN_C5=33,
    PIN_C6=34,PIN_C7=35,PIN_C8=36,PIN_C9=37,PIN_C10=38,PIN_C11=39,
    
    // GPIO 40-51
    PIN_D0=40,PIN_D1=41,PIN_D2=42,PIN_D3=43,PIN_D4=44,PIN_D5=45,
    PIN_D6=46,PIN_D7=47,PIN_D8=48,PIN_D9=49,PIN_D10=50,PIN_D11=51,
    
    // GPIO 52-63
    PIN_E0=52,PIN_E1=53,PIN_E2=54,PIN_E3=55,PIN_E4=56,PIN_E5=57,
    PIN_E6=58,PIN_E7=59,PIN_E8=60,PIN_E9=61,PIN_E10=62,PIN_E11=63,
    
    // GPIO 64-75
    PIN_F0=64,PIN_F1=65,PIN_F2=66,PIN_F3=67,PIN_F4=68,PIN_F5=69,
    PIN_F6=70,PIN_F7=71,PIN_F8=72,PIN_F9=73,PIN_F10=74,PIN_F11=75
} GPIO;
#define GPIO_PIN_MAX 64//The last one is GPIO_MAX (not gpio 64)

typedef enum {
    GPIO_OUTPUT,GPIO_INPUT,GPIO_OPENDOOR,
} GPIO_TYPE;
#define GPIO_TYPE_COUNT(t) (sizeof(gpio_type)/sizeof(gpio_type[0])) 
typedef enum {
    //GPIO_LEVEL
    GPIO_LOW,GPIO_HIGH,//default value of GPIO,0 is low,1 is high
    //GPIO_PULLUP,
} GPIO_LEVEL;
#define GPIO_LEVELS 2
typedef enum {
    PINMODE_INPUT=0,PINMODE_OUTPUT,
} PINMODE;

//------------------------------------------------------------------------------

/**
 * \brief set gpio pin mode and direction.
 * @param pin GPIO number 
 * @param type GPIO_TYPE type value: input, output, or open door
 */
void gpio_pin_mode(GPIO pin, GPIO_TYPE type);
/**
 * \brief get gpio pin direction. 
 * @param pin GPIO number
 * @return GPIO_LEVEL direction value: GPIO_LOW or GPIO_HIGH
 */
GPIO_LEVEL gpio_pin_dir(GPIO pin);
/**
 * \brief set gpio pin level. 
 * @param pin GPIO number
 * @param val level value, GPIO_LOW or GPIO_HIGH. default GPIO_LOW.
 */
void gpio_pin_level(GPIO pin, GPIO_LEVEL val);
/**
 * \brief get gpio pin level. 
 * @param pin GPIO number
 * @return GPIO_LEVEL value: GPIO_LOW or GPIO_HIGH
 */
GPIO_LEVEL gpio_pin_level(GPIO pin);
/**
 * \brief set gpio pin mode and direction. 
 * @param pin GPIO number
 * @param val type value: input, output, or open door
 */
void gpio_pin_type(GPIO pin, PINMODE type);
//------------------------------------------------------------------------------
#endif





[root@localhost ~]$ ls -l
total 83294
drwxr-xr-x    2 root      root          4096 May 20 11:28 .
drwxrwxr-x   70 root      root         12288 Oct  6  2020 ..
drwxrwxr-x    3 harry staff   34072 Jul 25 10:43 a.out
drwxrwxr-x    3 harry staff    19136 Sep 18 10:16 lottery.c
[/root@localhost ~]$
\end{code}

Answer: You are running as root, and not your regular user account (harry). Try

\begin{code}
[harry@localhost ~]$ ls -l
total 32
-rwxr-xr-x  1 harry  staff  8904 May 17 07:56 a.out
-rw-r--r--  1 harry  staff   555 May 17 07:56 lottery.c
\end{code}